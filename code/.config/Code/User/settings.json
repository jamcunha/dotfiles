{
  "workbench.colorTheme": "Dracula",
  "workbench.iconTheme": "material-icon-theme",
  "editor.fontFamily": "'RobotoMono Nerd Font', 'monospace', monospace",
  "editor.bracketPairColorization.independentColorPoolPerBracketType": true,
  "security.workspace.trust.untrustedFiles": "open",
  "vscode-neovim.neovimExecutablePaths.linux": "/usr/local/bin/nvim",
  "editor.fontSize": 13,
  "window.zoomLevel": 0.5,
  "workbench.startupEditor": "none",
  "editor.tabSize": 2,
  "whichkey.bindings": [
    // Window Split
    {
      "key": "v",
      "name": "Split Vertical",
      "type": "command",
      "command": "workbench.action.splitEditor",
    },
    {
      "key": "h",
      "name": "Split Horizontal",
      "type": "command",
      "command": "workbench.action.splitEditorDown",
    },
        
    // Buffers
    {
      "key": "b",
      "name": "Buffers ...",
      "type": "bindings",
      "bindings": [
        {
          "key": "b",
          "name": "Show all buffers",
          "type": "command",
          "command": "workbench.action.showAllEditors"
        },
        {
          "key": "d",
          "name": "Close active buffer",
          "type": "command",
          "command": "workbench.action.closeActiveEditor",
        },
        {
          "key": "n",
          "name": "Next editor",
          "type": "command",
          "command": "workbench.action.nextEditor"
        },
        {
          "key": "p",
          "name": "Previous editor",
          "type": "command",
          "command": "workbench.action.previousEditor"
        },
        {
          "key": "N",
          "name": "New untitled editor",
          "type": "command",
          "command": "workbench.action.files.newUntitledFile"
        },
      ],
    },
    
    // Open files and directories
    {
      "key": "o",
      "name": "Open ...",
      "type": "bindings",
      "bindings": [
        {
          "key": "d",
          "name": "Directory",
          "type": "command",
          "command": "workbench.action.files.openFolder",
        },
        {
          "key": "f",
          "name": "File",
          "type": "command",
          "command": "workbench.action.files.openFile",
        },
      ],
    },
    
    // UI Stuff
    {
      "key": "u",
      "name": "UI Toggle ...",
      "type": "bindings",
      "bindings": [
        {
          "key": "a",
          "name": "Toggle activity bar",
          "type": "command",
          "command": "workbench.action.toggleActivityBarVisibility",
        },
        {
          "key": "b",
          "name": "Toggle side bar",
          "type": "command",
          "command": "workbench.action.toggleSidebarVisibility",
        },
      ],
    },

    // Terminal
    {
      "key": "t",
      "name": "Terminal ...",
      "type": "bindings",
      "bindings": [
        {
          "key": "t",
          "name": "Toggle terminal",
          "type": "command",
          "command": "workbench.action.togglePanel",
        },
        {
          "key": "T",
          "name": "Focus terminal",
          "type": "command",
          "command": "workbench.action.terminal.toggleTerminal",
          "when": "!terminalFocus",
        }
      ],
    },
      
    // Activity bar
    {
      "key": "s",
      "name": "Show ...",
      "type": "bindings",
      "bindings": [
        {
          "key": "e",
          "name": "Explorer",
          "type": "command",
          "command": "workbench.view.explorer",
        },
        {
          "key": "g",
          "name": "Git",
          "type": "command",
          "command": "workbench.view.scm",
        },
        {
          "key": "x",
          "name": "Extensions",
          "type": "command",
          "command": "workbench.view.extensions",
        },
      ],
    },
    
    // Git
    {
      "key": "g",
      "name": "Git ...",
      "type": "bindings",
      "bindings": [
        {
          "key": ",",
          "name": "Search commits",
          "type": "command",
          "command": "gitlens.showCommitSearch",
          "when": "gitlens:enabled && config.gitlens.keymap == 'alternate'",
        },
        {
          "key": "a",
          "name": "Stage",
          "type": "command",
          "command": "git.stage",
        },
        {
          "key": "u",
          "name": "Unstage",
          "type": "command",
          "command": "git.unstage",
        },
        {
          "key": "s",
          "name": "Status",
          "type": "command",
          "command": "gitlens.showQuickRepoStatus",
          "when": "gitlens:enabled && config.gitlens.keymap == 'alternate'",
        },
        {
          "key": "b",
          "name": "Checkout",
          "type": "command",
          "command": "git.checkout",
        },
        {
          "key": "c",
          "name": "Commit",
          "type": "command",
          "command": "git.commit",
        },
        {
          "key": "d",
          "name": "Delete Branch",
          "type": "command",
          "command": "git.deleteBranch",
        },
        {
          "key": "f",
          "name": "Fetch",
          "type": "command",
          "command": "git.fetch",
        },
        {
          "key": "p",
          "name": "Push",
          "type": "command",
          "command": "git.push",
        },
        {
          "key": "P",
          "name": "Pull",
          "type": "command",
          "command": "git.pullFrom",
        },
        {
          "key": "m",
          "name": "Merge",
          "type": "command",
          "command": "git.merge",
        },
        {
          "key": "h",
          "name": "History",
          "type": "command",
          "command": "gitlens.showQuickFileHistory",
        },
        {
          "key": "i",
          "name": "Init",
          "type": "comment",
          "command": "git.init",
        },
        {
          "key": "l",
          "name": "Toggle Line Blame",
          "type": "command",
          "command": "gitlens.toggleLineBlame",
          "when": "gitlens:canToggleCodeLens && gitlens:enabled && config.gitlens.keymap == 'alternate'",
        },
        {
          "key": "L",
          "name": "Toggle GitLens",
          "type": "command",
          "command": "gitlens.toggleCodeLens",
          "when": "gitlens:canToggleCodeLens && gitlens:enabled && config.gitlens.keymap == 'alternate'",
        },
      ],
    },
    
    // LSP
    {
      "key": "l",
      "name": "LSP ...",
      "type": "bindings",
      "bindings": [
        {
          "key": "d",
          "name": "Definition",
          "type": "command",
          "command": "editor.action.revealDefinition",
          "when": "editorHasDefinitionProvider && !isInEmbeddedEditor"
        },
        {
          "key": "e",
          "name": "Errors",
          "type": "command",
          "command": "workbench.actions.view.problems",
        },
        {
          "key": "l",
          "name": "Code Lens",
          "type": "command",
          "command": "codelens.showLensesInCurrentLine",
        },
        {
          "key": "r",
          "name": "References",
          "type": "command",
          "command": "editor.action.goToReferences",
          "when": "editorHasReferenceProvider && !inReferenceSearchEditor && !isInEmbeddedEditor",
        },
        {
          "key": "R",
          "name": "Rename",
          "type": "command",
          "command": "editor.action.rename",
          "when": "editorHasRenameProvider && editorTextFocus && !editorReadonly",
        },
        {
          "key": "s",
          "name": "Go To Symbol",
          "type": "command",
          "command": "workbench.action.gotoSymbol",
        },
        {
          "key": "S",
          "name": "Show All Symbols",
          "type": "command",
          "command": "workbench.action.showAllSymbols",
        },
      ],
    },
    
    // Comments
    {
      "key": "c",
      "name": "Comment",
      "type": "command",
      "command": "vscode-neovim.send",
      "args": "<C-/>",    
    },
  ],
  "editor.minimap.autohide": true,
  "window.menuBarVisibility": "toggle",
  "editor.scrollbar.horizontal": "hidden",
  "editor.scrollbar.vertical": "hidden",
  "gitlens.keymap": "alternate",
  "explorer.confirmDelete": false,
  "workbench.activityBar.visible": false,
}
